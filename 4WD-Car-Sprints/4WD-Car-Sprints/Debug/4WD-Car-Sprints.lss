
4WD-Car-Sprints.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000312  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000386  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  00800060  00800060  00000386  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000386  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  000003f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b33  00000000  00000000  000004d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000669  00000000  00000000  00001007  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000876  00000000  00000000  00001670  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000400  00000000  00000000  00001ee8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000058f  00000000  00000000  000022e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fd7  00000000  00000000  00002877  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  0000384e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__vector_4>
  14:	0c 94 67 00 	jmp	0xce	; 0xce <__vector_5>
  18:	0c 94 90 00 	jmp	0x120	; 0x120 <__vector_6>
  1c:	0c 94 b9 00 	jmp	0x172	; 0x172 <__vector_7>
  20:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__vector_8>
  24:	0c 94 0b 01 	jmp	0x216	; 0x216 <__vector_9>
  28:	0c 94 34 01 	jmp	0x268	; 0x268 <__vector_10>
  2c:	0c 94 5d 01 	jmp	0x2ba	; 0x2ba <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a0 37       	cpi	r26, 0x70	; 112
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 86 01 	call	0x30c	; 0x30c <main>
  74:	0c 94 87 01 	jmp	0x30e	; 0x30e <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <__vector_4>:
			*u16_a_frequency =  (u16) ((d64)((d64)F_CPU / (d64)prescaler)   / (d64) Period);
			*u16_a_timeOn = (u16) ( ( (d64)prescaler / (d64)((d64)F_CPU / 1000000.0) ) * Ton);
	}
	return u8_a_retFunction;
}
void __vector_4(void) {
  7c:	1f 92       	push	r1
  7e:	0f 92       	push	r0
  80:	0f b6       	in	r0, 0x3f	; 63
  82:	0f 92       	push	r0
  84:	11 24       	eor	r1, r1
  86:	2f 93       	push	r18
  88:	3f 93       	push	r19
  8a:	4f 93       	push	r20
  8c:	5f 93       	push	r21
  8e:	6f 93       	push	r22
  90:	7f 93       	push	r23
  92:	8f 93       	push	r24
  94:	9f 93       	push	r25
  96:	af 93       	push	r26
  98:	bf 93       	push	r27
  9a:	ef 93       	push	r30
  9c:	ff 93       	push	r31
	if (v_g_callbackFunc[TIMER2_COMP] != NULL)
  9e:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  a2:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  a6:	30 97       	sbiw	r30, 0x00	; 0
  a8:	09 f0       	breq	.+2      	; 0xac <__vector_4+0x30>
	v_g_callbackFunc[TIMER2_COMP]();
  aa:	09 95       	icall
}
  ac:	ff 91       	pop	r31
  ae:	ef 91       	pop	r30
  b0:	bf 91       	pop	r27
  b2:	af 91       	pop	r26
  b4:	9f 91       	pop	r25
  b6:	8f 91       	pop	r24
  b8:	7f 91       	pop	r23
  ba:	6f 91       	pop	r22
  bc:	5f 91       	pop	r21
  be:	4f 91       	pop	r20
  c0:	3f 91       	pop	r19
  c2:	2f 91       	pop	r18
  c4:	0f 90       	pop	r0
  c6:	0f be       	out	0x3f, r0	; 63
  c8:	0f 90       	pop	r0
  ca:	1f 90       	pop	r1
  cc:	18 95       	reti

000000ce <__vector_5>:
void __vector_5(void) {
  ce:	1f 92       	push	r1
  d0:	0f 92       	push	r0
  d2:	0f b6       	in	r0, 0x3f	; 63
  d4:	0f 92       	push	r0
  d6:	11 24       	eor	r1, r1
  d8:	2f 93       	push	r18
  da:	3f 93       	push	r19
  dc:	4f 93       	push	r20
  de:	5f 93       	push	r21
  e0:	6f 93       	push	r22
  e2:	7f 93       	push	r23
  e4:	8f 93       	push	r24
  e6:	9f 93       	push	r25
  e8:	af 93       	push	r26
  ea:	bf 93       	push	r27
  ec:	ef 93       	push	r30
  ee:	ff 93       	push	r31
	if (v_g_callbackFunc[TIMER2_OVF] != NULL)
  f0:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
  f4:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
  f8:	30 97       	sbiw	r30, 0x00	; 0
  fa:	09 f0       	breq	.+2      	; 0xfe <__vector_5+0x30>
	v_g_callbackFunc[TIMER2_OVF]();
  fc:	09 95       	icall
}
  fe:	ff 91       	pop	r31
 100:	ef 91       	pop	r30
 102:	bf 91       	pop	r27
 104:	af 91       	pop	r26
 106:	9f 91       	pop	r25
 108:	8f 91       	pop	r24
 10a:	7f 91       	pop	r23
 10c:	6f 91       	pop	r22
 10e:	5f 91       	pop	r21
 110:	4f 91       	pop	r20
 112:	3f 91       	pop	r19
 114:	2f 91       	pop	r18
 116:	0f 90       	pop	r0
 118:	0f be       	out	0x3f, r0	; 63
 11a:	0f 90       	pop	r0
 11c:	1f 90       	pop	r1
 11e:	18 95       	reti

00000120 <__vector_6>:
void __vector_6(void) {
 120:	1f 92       	push	r1
 122:	0f 92       	push	r0
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	0f 92       	push	r0
 128:	11 24       	eor	r1, r1
 12a:	2f 93       	push	r18
 12c:	3f 93       	push	r19
 12e:	4f 93       	push	r20
 130:	5f 93       	push	r21
 132:	6f 93       	push	r22
 134:	7f 93       	push	r23
 136:	8f 93       	push	r24
 138:	9f 93       	push	r25
 13a:	af 93       	push	r26
 13c:	bf 93       	push	r27
 13e:	ef 93       	push	r30
 140:	ff 93       	push	r31
	if (v_g_callbackFunc[TIMER1_CAPT] != NULL)
 142:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 146:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 14a:	30 97       	sbiw	r30, 0x00	; 0
 14c:	09 f0       	breq	.+2      	; 0x150 <__vector_6+0x30>
	v_g_callbackFunc[TIMER1_CAPT]();
 14e:	09 95       	icall

}
 150:	ff 91       	pop	r31
 152:	ef 91       	pop	r30
 154:	bf 91       	pop	r27
 156:	af 91       	pop	r26
 158:	9f 91       	pop	r25
 15a:	8f 91       	pop	r24
 15c:	7f 91       	pop	r23
 15e:	6f 91       	pop	r22
 160:	5f 91       	pop	r21
 162:	4f 91       	pop	r20
 164:	3f 91       	pop	r19
 166:	2f 91       	pop	r18
 168:	0f 90       	pop	r0
 16a:	0f be       	out	0x3f, r0	; 63
 16c:	0f 90       	pop	r0
 16e:	1f 90       	pop	r1
 170:	18 95       	reti

00000172 <__vector_7>:
void __vector_7(void) {
 172:	1f 92       	push	r1
 174:	0f 92       	push	r0
 176:	0f b6       	in	r0, 0x3f	; 63
 178:	0f 92       	push	r0
 17a:	11 24       	eor	r1, r1
 17c:	2f 93       	push	r18
 17e:	3f 93       	push	r19
 180:	4f 93       	push	r20
 182:	5f 93       	push	r21
 184:	6f 93       	push	r22
 186:	7f 93       	push	r23
 188:	8f 93       	push	r24
 18a:	9f 93       	push	r25
 18c:	af 93       	push	r26
 18e:	bf 93       	push	r27
 190:	ef 93       	push	r30
 192:	ff 93       	push	r31
	if (v_g_callbackFunc[TIMER1_COMPA] != NULL)
 194:	e0 91 66 00 	lds	r30, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 198:	f0 91 67 00 	lds	r31, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 19c:	30 97       	sbiw	r30, 0x00	; 0
 19e:	09 f0       	breq	.+2      	; 0x1a2 <__vector_7+0x30>
	v_g_callbackFunc[TIMER1_COMPA]();
 1a0:	09 95       	icall
}
 1a2:	ff 91       	pop	r31
 1a4:	ef 91       	pop	r30
 1a6:	bf 91       	pop	r27
 1a8:	af 91       	pop	r26
 1aa:	9f 91       	pop	r25
 1ac:	8f 91       	pop	r24
 1ae:	7f 91       	pop	r23
 1b0:	6f 91       	pop	r22
 1b2:	5f 91       	pop	r21
 1b4:	4f 91       	pop	r20
 1b6:	3f 91       	pop	r19
 1b8:	2f 91       	pop	r18
 1ba:	0f 90       	pop	r0
 1bc:	0f be       	out	0x3f, r0	; 63
 1be:	0f 90       	pop	r0
 1c0:	1f 90       	pop	r1
 1c2:	18 95       	reti

000001c4 <__vector_8>:
void __vector_8(void) {
 1c4:	1f 92       	push	r1
 1c6:	0f 92       	push	r0
 1c8:	0f b6       	in	r0, 0x3f	; 63
 1ca:	0f 92       	push	r0
 1cc:	11 24       	eor	r1, r1
 1ce:	2f 93       	push	r18
 1d0:	3f 93       	push	r19
 1d2:	4f 93       	push	r20
 1d4:	5f 93       	push	r21
 1d6:	6f 93       	push	r22
 1d8:	7f 93       	push	r23
 1da:	8f 93       	push	r24
 1dc:	9f 93       	push	r25
 1de:	af 93       	push	r26
 1e0:	bf 93       	push	r27
 1e2:	ef 93       	push	r30
 1e4:	ff 93       	push	r31
	if (v_g_callbackFunc[TIMER1_COMPB] != NULL)
 1e6:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <__DATA_REGION_ORIGIN__+0x8>
 1ea:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <__DATA_REGION_ORIGIN__+0x9>
 1ee:	30 97       	sbiw	r30, 0x00	; 0
 1f0:	09 f0       	breq	.+2      	; 0x1f4 <__vector_8+0x30>
	v_g_callbackFunc[TIMER1_COMPB]();
 1f2:	09 95       	icall
}
 1f4:	ff 91       	pop	r31
 1f6:	ef 91       	pop	r30
 1f8:	bf 91       	pop	r27
 1fa:	af 91       	pop	r26
 1fc:	9f 91       	pop	r25
 1fe:	8f 91       	pop	r24
 200:	7f 91       	pop	r23
 202:	6f 91       	pop	r22
 204:	5f 91       	pop	r21
 206:	4f 91       	pop	r20
 208:	3f 91       	pop	r19
 20a:	2f 91       	pop	r18
 20c:	0f 90       	pop	r0
 20e:	0f be       	out	0x3f, r0	; 63
 210:	0f 90       	pop	r0
 212:	1f 90       	pop	r1
 214:	18 95       	reti

00000216 <__vector_9>:
void __vector_9(void) {
 216:	1f 92       	push	r1
 218:	0f 92       	push	r0
 21a:	0f b6       	in	r0, 0x3f	; 63
 21c:	0f 92       	push	r0
 21e:	11 24       	eor	r1, r1
 220:	2f 93       	push	r18
 222:	3f 93       	push	r19
 224:	4f 93       	push	r20
 226:	5f 93       	push	r21
 228:	6f 93       	push	r22
 22a:	7f 93       	push	r23
 22c:	8f 93       	push	r24
 22e:	9f 93       	push	r25
 230:	af 93       	push	r26
 232:	bf 93       	push	r27
 234:	ef 93       	push	r30
 236:	ff 93       	push	r31
	if (v_g_callbackFunc[TIMER1_OVF] != NULL)
 238:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <__DATA_REGION_ORIGIN__+0xa>
 23c:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <__DATA_REGION_ORIGIN__+0xb>
 240:	30 97       	sbiw	r30, 0x00	; 0
 242:	09 f0       	breq	.+2      	; 0x246 <__vector_9+0x30>
	v_g_callbackFunc[TIMER1_OVF]();
 244:	09 95       	icall
}
 246:	ff 91       	pop	r31
 248:	ef 91       	pop	r30
 24a:	bf 91       	pop	r27
 24c:	af 91       	pop	r26
 24e:	9f 91       	pop	r25
 250:	8f 91       	pop	r24
 252:	7f 91       	pop	r23
 254:	6f 91       	pop	r22
 256:	5f 91       	pop	r21
 258:	4f 91       	pop	r20
 25a:	3f 91       	pop	r19
 25c:	2f 91       	pop	r18
 25e:	0f 90       	pop	r0
 260:	0f be       	out	0x3f, r0	; 63
 262:	0f 90       	pop	r0
 264:	1f 90       	pop	r1
 266:	18 95       	reti

00000268 <__vector_10>:
void __vector_10(void) {
 268:	1f 92       	push	r1
 26a:	0f 92       	push	r0
 26c:	0f b6       	in	r0, 0x3f	; 63
 26e:	0f 92       	push	r0
 270:	11 24       	eor	r1, r1
 272:	2f 93       	push	r18
 274:	3f 93       	push	r19
 276:	4f 93       	push	r20
 278:	5f 93       	push	r21
 27a:	6f 93       	push	r22
 27c:	7f 93       	push	r23
 27e:	8f 93       	push	r24
 280:	9f 93       	push	r25
 282:	af 93       	push	r26
 284:	bf 93       	push	r27
 286:	ef 93       	push	r30
 288:	ff 93       	push	r31
	if (v_g_callbackFunc[TIMER0_COMP] != NULL)
 28a:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <__DATA_REGION_ORIGIN__+0xc>
 28e:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <__DATA_REGION_ORIGIN__+0xd>
 292:	30 97       	sbiw	r30, 0x00	; 0
 294:	09 f0       	breq	.+2      	; 0x298 <__vector_10+0x30>
	v_g_callbackFunc[TIMER0_COMP]();
 296:	09 95       	icall
}
 298:	ff 91       	pop	r31
 29a:	ef 91       	pop	r30
 29c:	bf 91       	pop	r27
 29e:	af 91       	pop	r26
 2a0:	9f 91       	pop	r25
 2a2:	8f 91       	pop	r24
 2a4:	7f 91       	pop	r23
 2a6:	6f 91       	pop	r22
 2a8:	5f 91       	pop	r21
 2aa:	4f 91       	pop	r20
 2ac:	3f 91       	pop	r19
 2ae:	2f 91       	pop	r18
 2b0:	0f 90       	pop	r0
 2b2:	0f be       	out	0x3f, r0	; 63
 2b4:	0f 90       	pop	r0
 2b6:	1f 90       	pop	r1
 2b8:	18 95       	reti

000002ba <__vector_11>:
void __vector_11(void) {
 2ba:	1f 92       	push	r1
 2bc:	0f 92       	push	r0
 2be:	0f b6       	in	r0, 0x3f	; 63
 2c0:	0f 92       	push	r0
 2c2:	11 24       	eor	r1, r1
 2c4:	2f 93       	push	r18
 2c6:	3f 93       	push	r19
 2c8:	4f 93       	push	r20
 2ca:	5f 93       	push	r21
 2cc:	6f 93       	push	r22
 2ce:	7f 93       	push	r23
 2d0:	8f 93       	push	r24
 2d2:	9f 93       	push	r25
 2d4:	af 93       	push	r26
 2d6:	bf 93       	push	r27
 2d8:	ef 93       	push	r30
 2da:	ff 93       	push	r31
	if (v_g_callbackFunc[TIMER0_OVF] != NULL)
 2dc:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
 2e0:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
 2e4:	30 97       	sbiw	r30, 0x00	; 0
 2e6:	09 f0       	breq	.+2      	; 0x2ea <__vector_11+0x30>
	v_g_callbackFunc[TIMER0_OVF]();
 2e8:	09 95       	icall
 2ea:	ff 91       	pop	r31
 2ec:	ef 91       	pop	r30
 2ee:	bf 91       	pop	r27
 2f0:	af 91       	pop	r26
 2f2:	9f 91       	pop	r25
 2f4:	8f 91       	pop	r24
 2f6:	7f 91       	pop	r23
 2f8:	6f 91       	pop	r22
 2fa:	5f 91       	pop	r21
 2fc:	4f 91       	pop	r20
 2fe:	3f 91       	pop	r19
 300:	2f 91       	pop	r18
 302:	0f 90       	pop	r0
 304:	0f be       	out	0x3f, r0	; 63
 306:	0f 90       	pop	r0
 308:	1f 90       	pop	r1
 30a:	18 95       	reti

0000030c <main>:
 30c:	ff cf       	rjmp	.-2      	; 0x30c <main>

0000030e <_exit>:
 30e:	f8 94       	cli

00000310 <__stop_program>:
 310:	ff cf       	rjmp	.-2      	; 0x310 <__stop_program>
